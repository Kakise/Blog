---
layout: false
---
<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Admin Space</title>
  <!-- Include the stylesheets from your site here -->
  <link rel="stylesheet" href="/css/style.css" />
  <link rel="stylesheet" href="/lib/font-awesome/css/fontawesome-all.min.css" />
  <link rel="stylesheet" href="https://unpkg.com/netlify-cms@^1.0.0/dist/cms.css" />
</head>
<body>
  <script src="https://unpkg.com/netlify-cms@^1.0.0/dist/cms.js"></script>
  <script>
      function pad(number) {
      if ( number < 10 ) {
        return '0' + number;
      }
      return number;
    }
 
var PostPreview = createClass({ 
  render: function render() {
    var date = new Date(this.props.entry.getIn(['data', 'date']));
    var fdate = date.getUTCFullYear() + '-' + pad( date.getUTCMonth() + 1 ) + '-' + pad( date.getUTCDate() );
    return h( "article", {className: "post", itemtype: "http://schema.org/BlogPosting"},
      h(
        "div",
        {className: "content index my4"},
      h(
        "link",
        {rel: "stylesheet", href: "/lib/font-awesome/css/fontawesome-all.min.css"}
      ),
      h(
        "header",
        {},
        h(
          "h1",
          { className: "posttitle", itemprop: "name headline" },
          this.props.entry.getIn(['data', 'title'])
        ),
        h(
          "div",
          { className: "meta" },
          h(
            "span",
            { className: "author", itemprop: "author", itemtype: "http://schema.org/Person"},
            h(
              "span",
              { itemprop: "name" },
              this.props.entry.getIn(['data', 'author'])
            )
          ),
          h(
            "div",
            { className: "postdate" },
            h(
              "time",
              { itemprop: "datePublished", datetime: fdate },
              fdate
            )
          ),
          h(
            "div",
            { className: "article-tag" },
            h("i", { className: "fas fa-tag" }),
            this.props.entry.getIn(['data', 'tags'])._tail.array.map(function(tag, index) {return h('a', {className: "tag-link", href: "#"},tag);})
          )
        )
      ),
      h(
        "div",
        { className: "content", itemprop: "articleBody" },
        this.props.widgetFor('body')
      )
    )
    );
  }
});
  CMS.registerPreviewTemplate("posts", PostPreview);
  CMS.registerPreviewStyle('/css/style.css');
  CMS.registerPreviewStyle('/lib/font-awesome/css/fontawesome-all.min.css');
  </script>
</body>
</html>
